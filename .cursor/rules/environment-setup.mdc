---
globs: .env*,example.env,src/lib/firebase.ts,src/lib/firebaseClient.ts
---

# Environment Setup Guidelines

## Required Environment Variables

### Firebase Configuration
```env
NEXT_PUBLIC_FIREBASE_API_KEY=your_firebase_api_key
NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=your_project.firebaseapp.com
NEXT_PUBLIC_FIREBASE_PROJECT_ID=your_project_id
NEXT_PUBLIC_STORAGE_BUCKET=your_project.appspot.com
NEXT_PUBLIC_SENDER_ID=your_sender_id
NEXT_PUBLIC_APP_ID=your_app_id
NEXT_PUBLIC_MEASUREMENT_ID=your_measurement_id
```

### Google Gemini AI
```env
GEMNI_API_KEY=your_gemini_api_key
```

**Note**: There's a typo in the variable name - it should be `GEMINI_API_KEY` but the code uses `GEMNI_API_KEY`.

## Environment File Setup

1. **Copy example file**: `cp example.env .env.local`
2. **Use `.env.local`** instead of `.env` (automatically ignored by Git)
3. **Restart development server** after making changes

## Firebase Setup Requirements

### Firebase Console Configuration
1. Create Firebase project at [Firebase Console](https://console.firebase.google.com/)
2. Enable Google Authentication in Authentication â†’ Sign-in method
3. Add authorized domains for production deployment
4. Configure OAuth redirect URIs for production

### Firebase Security Rules
```javascript
// firestore.rules
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
  }
}
```

## Google Gemini AI Setup

1. Get API key from [Google AI Studio](https://aistudio.google.com/)
2. Add to environment variables
3. Test with the [api/generate/route.ts](mdc:src/app/api/generate/route.ts) endpoint

## Security Best Practices

1. **Never commit environment files** - Add to `.gitignore`
2. **Use different keys** for different environments
3. **Rotate keys regularly**
4. **Monitor usage** in Firebase and Gemini consoles

## Environment-Specific Configuration

### Development
- Use test Firebase project
- Use development API keys
- Enable debug logging

### Production
- Use production Firebase project
- Use production API keys
- Configure proper CORS settings
- Add production domains to Firebase Auth

## Verification Steps

1. Start development server: `npm run dev`
2. Check console for Firebase initialization errors
3. Test authentication at `/login`
4. Test AI integration with Gemini API
5. Verify all environment variables are loaded correctly

## Common Issues

- **Firebase initialization error**: Check all Firebase environment variables
- **Authentication domain error**: Add domain to Firebase Auth authorized domains
- **Gemini API error**: Verify `GEMNI_API_KEY` is set correctly